---
# run on only items staged in git:  pre-commit
# automatically run on commit:      pre-commit install
# check all files in repo:          pre-commit run --all-files
# https://github.com/pre-commit/pre-commit-hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-yaml
      - id: check-json
      - id: check-added-large-files
        args: ["--maxkb=500"]
      - id: check-ast
      - id: check-case-conflict
      - id: check-merge-conflict
      # - id: check-xml
      - id: end-of-file-fixer
      # https://www.aleksandrhovhannisyan.com/blog/crlf-vs-lf-normalizing-line-endings-in-git/
      # - id: mixed-line-ending
      #   args: ['--fix=no']
      - id: requirements-txt-fixer
      - id: trailing-whitespace
      #  args: [--markdown-linebreak-ext=md]
      - id: detect-private-key
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.26.3
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]
  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.9.3
    hooks:
      - id: isort
  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
  - repo: https://github.com/psf/black
    rev: 21.10b0
    hooks:
      - id: black
  # https://towardsdatascience.com/getting-started-with-python-pre-commit-hooks-28be2b2d09d5
  # the following is windows only due to using `python` instead of `python3`
  # - repo: local
  #   hooks:
  #     - id: minimum-changes-local
  #       name: minimum-changes-local
  #       entry: python pre_commit_hooks/minimum_changes.py
  #       language: system
  #       pass_filenames: True
  #       args: [--min-changes=0]
